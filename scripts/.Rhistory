op <- base_plots %>%
select(-PANEL, -PLOT.ID) %>%
left_join(., transcription, by = 'ECO.SITE') %>%
select(-QUANTITATIVE.BENCHMARKS) %>%
left_join(., benchmarks, by = 'ECO.SITE')  %>%
mutate(ECO.SITE.MATCHED = replace_na(ECO.SITE.MATCHED, FALSE),
ECO.SITE.MATCHED = if_else(ECO.SITE.MATCHED == T, 1, 0),
BASE.PLOTS = 1,
STATUS = if_else(STATUS == 'SAMPLED', 1, 0)) %>%
mutate(across(STATETRANSITION.PRODUCTION:QUANTITATIVE.BENCHMARKS, ~ replace_na(.x, 0))) %>%
select(-ECO.SITE, SAMPLED = STATUS) %>%
colSums()
top <- sort(op, decreasing = T)
bottom = 255 - top
names(bottom) <- NULL
names(top) <- NULL
#
loss <- vector(mode = "numeric", length = length(bottom))
for(i in seq(loss)) {loss[i] <-  bottom[i + 1] - bottom[i] }
loss <- loss[1:length(loss)-1]
evenLETTERS <- LETTERS[1:26 %% 2 == 0]
oddLETTERS <- LETTERS[1:26 %% 2 != 0]
evenLETTERS <- c('A', evenLETTERS) # deal with eccentricities involving A
evenLETTERS <- evenLETTERS[1:6]
oddLETTERS <- oddLETTERS[2:6]
from = sort(c(rep(evenLETTERS[1:length(evenLETTERS)-1], each = 2),
rep(oddLETTERS[1:length(oddLETTERS)-1], each = 1)))
to = sort( c('C', rep(oddLETTERS[2:length(oddLETTERS)], each = 2),
rep(evenLETTERS[2:length(evenLETTERS)], each = 1)))
top <- top[2:length(top)]
bottom <- bottom[2:(length(bottom)-1)]
quantity <- c(
top[1], bottom[1], top[2], loss[1], bottom[1],
top[3], loss[3], bottom[2], top[4], loss[4],
bottom[3], top[5], loss[5], bottom[4]
)
df = data.frame(from, to, quantity)
nodes <- data.frame(
ID = LETTERS[1:11],
label = c('Plots', 'Sampled', '', 'ES', '', 'ESD',  '',
'Associated', '', 'Benchmarks', ''),
x = c(1, rep(2:6, each = 2)),
y = c(2, rep(c(2,1), times = 5)),
label_pos = c('above', rep(c('above', 'below'), times = 5))
)
colors <- data.frame(substance = "<any>", color = "#008083")
ns <- list(type="arrow", gp=gpar(fill="#FD5901", col="white", lwd=4), mag_pos = 'label', mag_fmt="%.0f")
sankey(nodes, flows = df, node_style=ns, legend=F, colors, title = "Quantitative Benchmarks")
rm(colors, ns, nodes, top, bottom, quantity, evenLETTERS, oddLETTERS, df, i, loss, op, to, from, base_plots)
nodes <- data.frame(
ID = LETTERS[1:11],
label = c('Plots', 'Sampled', '', 'ES', '', 'ESD',  '',
'Associated', '', 'Benchmarks', 'Plots'),
x = c(1, rep(2:6, each = 2)),
y = c(2, rep(c(2,1), times = 5)),
label_pos = c('above', rep(c('above', 'below'), times = 5))
)
colors <- data.frame(substance = "<any>", color = "#008083")
ns <- list(type="arrow", gp=gpar(fill="#FD5901", col="white", lwd=4), mag_pos = 'label', mag_fmt="%.0f")
sankey(nodes, flows = df, node_style=ns, legend=F, colors, title = "Quantitative Benchmarks")
library(tidyverse)
library(PantaRhei)
library(grid)
pp <- '../data/processed'
f <- list.files(pp, pattern = 'csv')
transcription <- read.csv(file.path(pp, f[grep('Transcription', f)])) %>%
distinct(ECO.SITE, .keep_all = T) %>%
select(ECO.SITE:QUANTITATIVE.BENCHMARKS, -PLOTS) %>%
mutate(across(.cols = 2:4,  ~ if_else(.x == 'DONE', 1, 0)))
tracking <- read.csv(file.path(pp, f[grep('Tracking', f)]))
benchmarks <- read.csv(file.path(pp, f[grep('Quantitative', f)]))
production <- read.csv(file.path(pp, f[grep('Production', f)]))
stateTransition <- read.csv(file.path(pp, f[grep('Ordered', f )]))
rm(pp, f)
tracking_vals <- tracking %>% filter(str_detect(PANEL, 'oversample', negate = T) &
ECO.SITE.MATCHED == TRUE) %>%
select(ECO.SITE) %>%
left_join(., transcription, by = 'ECO.SITE')
# how many ES mapped to in UFO
tracking_vals %>% group_by(ECO.SITE) %>% count() # 38 are mapped to
# how many of these ESDS are completed ?
tracking_vals %>%
distinct(ECO.SITE, .keep_all = T) %>%
count(STATETRANSITION.PRODUCTION) # portions of at least 23 are complete.
# how many of the plots do these represent
nrow(tracking_vals) # 155 base plots have ESDS
tracking %>% filter(str_detect(PANEL, 'oversample', negate = T), str_detect(STATUS, '^SAMPLED')) %>% nrow()
# 206 of the BASE Plots are completed
tracking %>% nrow()
# 279 plots were sampled
base_plots <- tracking %>%
filter(str_detect(PANEL, 'oversample', negate = T))
benchmarks <- benchmarks %>%
distinct(ECO.SITE) %>%
mutate(QUANTITATIVE.BENCHMARKS = 1)
op <- base_plots %>%
select(-PANEL, -PLOT.ID) %>%
left_join(., transcription, by = 'ECO.SITE') %>%
select(-QUANTITATIVE.BENCHMARKS) %>%
left_join(., benchmarks, by = 'ECO.SITE')  %>%
mutate(ECO.SITE.MATCHED = replace_na(ECO.SITE.MATCHED, FALSE),
ECO.SITE.MATCHED = if_else(ECO.SITE.MATCHED == T, 1, 0),
BASE.PLOTS = 1,
STATUS = if_else(STATUS == 'SAMPLED', 1, 0)) %>%
mutate(across(STATETRANSITION.PRODUCTION:QUANTITATIVE.BENCHMARKS, ~ replace_na(.x, 0))) %>%
select(-ECO.SITE, SAMPLED = STATUS) %>%
colSums()
top <- sort(op, decreasing = T)
bottom = 255 - top
names(bottom) <- NULL
names(top) <- NULL
#
loss <- vector(mode = "numeric", length = length(bottom))
for(i in seq(loss)) {loss[i] <-  bottom[i + 1] - bottom[i] }
loss <- loss[1:length(loss)-1]
evenLETTERS <- LETTERS[1:26 %% 2 == 0]
oddLETTERS <- LETTERS[1:26 %% 2 != 0]
evenLETTERS <- c('A', evenLETTERS) # deal with eccentricities involving A
evenLETTERS <- evenLETTERS[1:6]
oddLETTERS <- oddLETTERS[2:6]
from = sort(c(rep(evenLETTERS[1:length(evenLETTERS)-1], each = 2),
rep(oddLETTERS[1:length(oddLETTERS)-1], each = 1)))
to = sort( c('C', rep(oddLETTERS[2:length(oddLETTERS)], each = 2),
rep(evenLETTERS[2:length(evenLETTERS)], each = 1)))
top <- top[2:length(top)]
bottom <- bottom[2:(length(bottom)-1)]
quantity <- c(
top[1], bottom[1], top[2], loss[1], bottom[1],
top[3], loss[3], bottom[2], top[4], loss[4],
bottom[3], top[5], loss[5], bottom[4]
)
df = data.frame(from, to, quantity)
nodes <- data.frame(
ID = LETTERS[1:11],
label = c('Plots', 'Sampled', '', 'ES', '', 'ESD',  '',
'Associated', '', 'Benchmarks', 'Plots'),
x = c(1, rep(2:6, each = 2)),
y = c(2, rep(c(2,1), times = 5)),
label_pos = c('above', rep(c('above', 'below'), times = 5))
)
colors <- data.frame(substance = "<any>", color = "#008083")
ns <- list(type="arrow", gp=gpar(fill="#FD5901", col="white", lwd=4), mag_pos = 'label', mag_fmt="%.0f")
sankey(nodes, flows = df, node_style=ns, legend=F, colors, title = "Quantitative Benchmarks")
rm(colors, ns, nodes, top, bottom, quantity, evenLETTERS, oddLETTERS, df, i, loss, op, to, from, base_plots)
library(tidyverse)
library(PantaRhei)
library(grid)
pp <- '../data/processed'
f <- list.files(pp, pattern = 'csv')
transcription <- read.csv(file.path(pp, f[grep('Transcription', f)])) %>%
distinct(ECO.SITE, .keep_all = T) %>%
select(ECO.SITE:QUANTITATIVE.BENCHMARKS, -PLOTS) %>%
mutate(across(.cols = 2:4,  ~ if_else(.x == 'DONE', 1, 0)))
tracking <- read.csv(file.path(pp, f[grep('Tracking', f)]))
benchmarks <- read.csv(file.path(pp, f[grep('Quantitative', f)]))
production <- read.csv(file.path(pp, f[grep('Production', f)]))
stateTransition <- read.csv(file.path(pp, f[grep('Ordered', f )]))
rm(pp, f)
tracking_vals <- tracking %>% filter(str_detect(PANEL, 'oversample', negate = T) &
ECO.SITE.MATCHED == TRUE) %>%
select(ECO.SITE) %>%
left_join(., transcription, by = 'ECO.SITE')
# how many ES mapped to in UFO
tracking_vals %>% group_by(ECO.SITE) %>% count() # 38 are mapped to
# how many of these ESDS are completed ?
tracking_vals %>%
distinct(ECO.SITE, .keep_all = T) %>%
count(STATETRANSITION.PRODUCTION) # portions of at least 23 are complete.
# how many of the plots do these represent
nrow(tracking_vals) # 155 base plots have ESDS
tracking %>% filter(str_detect(PANEL, 'oversample', negate = T), str_detect(STATUS, '^SAMPLED')) %>% nrow()
# 206 of the BASE Plots are completed
tracking %>% nrow()
# 279 plots were sampled
base_plots <- tracking %>%
filter(str_detect(PANEL, 'oversample', negate = T))
benchmarks <- benchmarks %>%
distinct(ECO.SITE) %>%
mutate(QUANTITATIVE.BENCHMARKS = 1)
op <- base_plots %>%
select(-PANEL, -PLOT.ID) %>%
left_join(., transcription, by = 'ECO.SITE') %>%
select(-QUANTITATIVE.BENCHMARKS) %>%
left_join(., benchmarks, by = 'ECO.SITE')  %>%
mutate(ECO.SITE.MATCHED = replace_na(ECO.SITE.MATCHED, FALSE),
ECO.SITE.MATCHED = if_else(ECO.SITE.MATCHED == T, 1, 0),
BASE.PLOTS = 1,
STATUS = if_else(STATUS == 'SAMPLED', 1, 0)) %>%
mutate(across(STATETRANSITION.PRODUCTION:QUANTITATIVE.BENCHMARKS, ~ replace_na(.x, 0))) %>%
select(-ECO.SITE, SAMPLED = STATUS) %>%
colSums()
top <- sort(op, decreasing = T)
bottom = 255 - top
names(bottom) <- NULL
names(top) <- NULL
#
loss <- vector(mode = "numeric", length = length(bottom))
for(i in seq(loss)) {loss[i] <-  bottom[i + 1] - bottom[i] }
loss <- loss[1:length(loss)-1]
evenLETTERS <- LETTERS[1:26 %% 2 == 0]
oddLETTERS <- LETTERS[1:26 %% 2 != 0]
evenLETTERS <- c('A', evenLETTERS) # deal with eccentricities involving A
evenLETTERS <- evenLETTERS[1:6]
oddLETTERS <- oddLETTERS[2:6]
from = sort(c(rep(evenLETTERS[1:length(evenLETTERS)-1], each = 2),
rep(oddLETTERS[1:length(oddLETTERS)-1], each = 1)))
to = sort( c('C', rep(oddLETTERS[2:length(oddLETTERS)], each = 2),
rep(evenLETTERS[2:length(evenLETTERS)], each = 1)))
top <- top[2:length(top)]
bottom <- bottom[2:(length(bottom)-1)]
quantity <- c(
top[1], bottom[1], top[2], loss[1], bottom[1],
top[3], loss[3], bottom[2], top[4], loss[4],
bottom[3], top[5], loss[5], bottom[4]
)
df = data.frame(from, to, quantity)
nodes <- data.frame(
ID = LETTERS[1:11],
label = c('Plots', 'Sampled', '', 'ES', '', 'ESD',  '',
'Associated', '', 'Benchmarks', 'Plots'),
x = c(1, rep(2:6, each = 2)),
y = c(2, rep(c(2,1), times = 5)),
label_pos = c('above', rep(c('above', 'below'), times = 5))
)
colors <- data.frame(substance = "<any>", color = "#008083")
ns <- list(type="arrow", gp=gpar(fill="#FD5901", col="white", lwd=4), mag_pos = 'label', mag_fmt="%.0f")
sankey(nodes, flows = df, node_style=ns, legend=F, colors, title = "Quantitative Benchmarks")
rm(colors, ns, nodes, top, bottom, quantity, evenLETTERS, oddLETTERS, df, i, loss, op, to, from, base_plots)
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
# how many of these ESDS are completed ?
tracking_vals %>%
distinct(ECO.SITE, .keep_all = T) %>%
count(STATETRANSITION.PRODUCTION) # portions of at least 23 are complete.
# how many of the plots do these represent
nrow(tracking_vals) # 155 base plots have ESDS
# how many of the plots do these represent
bp_w_ESD <- nrow(tracking_vals) # 155 base plots have ESDS
tracking %>% filter(str_detect(PANEL, 'oversample', negate = T), str_detect(STATUS, '^SAMPLED')) %>% nrow()
tracking %>% filter(str_detect(PANEL, 'oversample', negate = T), str_detect(STATUS, '^SAMPLED')) %>% nrow()
bp_sampled <- tracking %>% filter(str_detect(PANEL, 'oversample', negate = T), str_detect(STATUS, '^SAMPLED')) %>% nrow()
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
library(tidyverse)
library(PantaRhei)
library(grid)
pp <- '../data/processed'
f <- list.files(pp, pattern = 'csv')
transcription <- read.csv(file.path(pp, f[grep('Transcription', f)])) %>%
distinct(ECO.SITE, .keep_all = T) %>%
select(ECO.SITE:QUANTITATIVE.BENCHMARKS, -PLOTS) %>%
mutate(across(.cols = 2:4,  ~ if_else(.x == 'DONE', 1, 0)))
tracking <- read.csv(file.path(pp, f[grep('Tracking', f)]))
benchmarks <- read.csv(file.path(pp, f[grep('Quantitative', f)]))
production <- read.csv(file.path(pp, f[grep('Production', f)]))
stateTransition <- read.csv(file.path(pp, f[grep('Ordered', f )]))
rm(pp, f)
tracking_vals <- tracking %>% filter(str_detect(PANEL, 'oversample', negate = T) &
ECO.SITE.MATCHED == TRUE) %>%
select(ECO.SITE) %>%
left_join(., transcription, by = 'ECO.SITE')
# how many ES mapped to in UFO
esUFO <- tracking_vals %>% group_by(ECO.SITE) %>% count() # 38 are mapped to
# how many of these ESDS are completed ?
tracking_vals %>%
distinct(ECO.SITE, .keep_all = T) %>%
count(STATETRANSITION.PRODUCTION) # portions of at least 23 are complete.
# how many of the plots do these represent
bp_w_ESD <- nrow(tracking_vals) # 155 base plots have ESDS
bp_sampled <- tracking %>% filter(str_detect(PANEL, 'oversample', negate = T), str_detect(STATUS, '^SAMPLED')) %>% nrow()
# 206 of the BASE Plots are completed
plots_sampled <- tracking %>% nrow()
# 279 plots were sampled
base_plots <- tracking %>%
filter(str_detect(PANEL, 'oversample', negate = T))
benchmarks <- benchmarks %>%
distinct(ECO.SITE) %>%
mutate(QUANTITATIVE.BENCHMARKS = 1)
op <- base_plots %>%
select(-PANEL, -PLOT.ID) %>%
left_join(., transcription, by = 'ECO.SITE') %>%
select(-QUANTITATIVE.BENCHMARKS) %>%
left_join(., benchmarks, by = 'ECO.SITE')  %>%
mutate(ECO.SITE.MATCHED = replace_na(ECO.SITE.MATCHED, FALSE),
ECO.SITE.MATCHED = if_else(ECO.SITE.MATCHED == T, 1, 0),
BASE.PLOTS = 1,
STATUS = if_else(STATUS == 'SAMPLED', 1, 0)) %>%
mutate(across(STATETRANSITION.PRODUCTION:QUANTITATIVE.BENCHMARKS, ~ replace_na(.x, 0))) %>%
select(-ECO.SITE, SAMPLED = STATUS) %>%
colSums()
top <- sort(op, decreasing = T)
bottom = 255 - top
names(bottom) <- NULL
names(top) <- NULL
loss <- vector(mode = "numeric", length = length(bottom))
for(i in seq(loss)) {loss[i] <-  bottom[i + 1] - bottom[i] }
loss <- loss[1:length(loss)-1]
evenLETTERS <- LETTERS[1:26 %% 2 == 0]
oddLETTERS <- LETTERS[1:26 %% 2 != 0]
evenLETTERS <- c('A', evenLETTERS) # deal with eccentricities involving A
evenLETTERS <- evenLETTERS[1:6]
oddLETTERS <- oddLETTERS[2:6]
from = sort(c(rep(evenLETTERS[1:length(evenLETTERS)-1], each = 2),
rep(oddLETTERS[1:length(oddLETTERS)-1], each = 1)))
to = sort( c('C', rep(oddLETTERS[2:length(oddLETTERS)], each = 2),
rep(evenLETTERS[2:length(evenLETTERS)], each = 1)))
top <- top[2:length(top)]
bottom <- bottom[2:(length(bottom)-1)]
quantity <- c(
top[1], bottom[1], top[2], loss[1], bottom[1],
top[3], loss[3], bottom[2], top[4], loss[4],
bottom[3], top[5], loss[5], bottom[4]
)
df = data.frame(from, to, quantity)
nodes <- data.frame(
ID = LETTERS[1:11],
label = c('Plots', 'Sampled', '', 'ES', '', 'ESD',  '',
'Similar', '', 'Benchmarks', 'Plots'),
x = c(1, rep(2:6, each = 2)),
y = c(2, rep(c(2,1), times = 5)),
label_pos = c('above', rep(c('above', 'below'), times = 5))
)
colors <- data.frame(substance = "<any>", color = "#008083")
ns <- list(type="arrow", gp=gpar(fill="#FD5901", col="white", lwd=4), mag_pos = 'label', mag_fmt="%.0f")
sankey(nodes, flows = df, node_style=ns, legend=F, colors, title = "The Number of Base Plots for which Quantitative Benchmarks Exist")
rm(colors, ns, nodes, top, bottom, quantity, evenLETTERS, oddLETTERS, df, i, loss, op, to, from, base_plots)
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
library(tidyverse)
library(PantaRhei)
library(grid)
pp <- '../data/processed'
f <- list.files(pp, pattern = 'csv')
transcription <- read.csv(file.path(pp, f[grep('Transcription', f)])) %>%
distinct(ECO.SITE, .keep_all = T) %>%
select(ECO.SITE:QUANTITATIVE.BENCHMARKS, -PLOTS) %>%
mutate(across(.cols = 2:4,  ~ if_else(.x == 'DONE', 1, 0)))
tracking <- read.csv(file.path(pp, f[grep('Tracking', f)]))
benchmarks <- read.csv(file.path(pp, f[grep('Quantitative', f)]))
production <- read.csv(file.path(pp, f[grep('Production', f)]))
stateTransition <- read.csv(file.path(pp, f[grep('Ordered', f )]))
rm(pp, f)
tracking_vals <- tracking %>% filter(str_detect(PANEL, 'oversample', negate = T) &
ECO.SITE.MATCHED == TRUE) %>%
select(ECO.SITE) %>%
left_join(., transcription, by = 'ECO.SITE')
# how many ES mapped to in UFO
esUFO <- tracking_vals %>% group_by(ECO.SITE) %>% count() # 38 are mapped to
# how many of these ESDS are completed ?
# tracking_vals %>%
#  distinct(ECO.SITE, .keep_all = T) %>%
#  count(STATETRANSITION.PRODUCTION) # portions of at least 23 are complete.
# how many of the plots do these represent
bp_w_ESD <- nrow(tracking_vals) # 155 base plots have ESDS
bp_sampled <- tracking %>% filter(str_detect(PANEL, 'oversample', negate = T), str_detect(STATUS, '^SAMPLED')) %>% nrow()
# 206 of the BASE Plots are completed
plots_sampled <- tracking %>% nrow()
# 279 plots were sampled
base_plots <- tracking %>%
filter(str_detect(PANEL, 'oversample', negate = T))
benchmarks <- benchmarks %>%
distinct(ECO.SITE) %>%
mutate(QUANTITATIVE.BENCHMARKS = 1)
op <- base_plots %>%
select(-PANEL, -PLOT.ID) %>%
left_join(., transcription, by = 'ECO.SITE') %>%
select(-QUANTITATIVE.BENCHMARKS) %>%
left_join(., benchmarks, by = 'ECO.SITE')  %>%
mutate(ECO.SITE.MATCHED = replace_na(ECO.SITE.MATCHED, FALSE),
ECO.SITE.MATCHED = if_else(ECO.SITE.MATCHED == T, 1, 0),
BASE.PLOTS = 1,
STATUS = if_else(STATUS == 'SAMPLED', 1, 0)) %>%
mutate(across(STATETRANSITION.PRODUCTION:QUANTITATIVE.BENCHMARKS, ~ replace_na(.x, 0))) %>%
select(-ECO.SITE, SAMPLED = STATUS) %>%
colSums()
top <- sort(op, decreasing = T)
bottom = 255 - top
names(bottom) <- NULL
names(top) <- NULL
loss <- vector(mode = "numeric", length = length(bottom))
for(i in seq(loss)) {loss[i] <-  bottom[i + 1] - bottom[i] }
loss <- loss[1:length(loss)-1]
evenLETTERS <- LETTERS[1:26 %% 2 == 0]
oddLETTERS <- LETTERS[1:26 %% 2 != 0]
evenLETTERS <- c('A', evenLETTERS) # deal with eccentricities involving A
evenLETTERS <- evenLETTERS[1:6]
oddLETTERS <- oddLETTERS[2:6]
from = sort(c(rep(evenLETTERS[1:length(evenLETTERS)-1], each = 2),
rep(oddLETTERS[1:length(oddLETTERS)-1], each = 1)))
to = sort( c('C', rep(oddLETTERS[2:length(oddLETTERS)], each = 2),
rep(evenLETTERS[2:length(evenLETTERS)], each = 1)))
top <- top[2:length(top)]
bottom <- bottom[2:(length(bottom)-1)]
quantity <- c(
top[1], bottom[1], top[2], loss[1], bottom[1],
top[3], loss[3], bottom[2], top[4], loss[4],
bottom[3], top[5], loss[5], bottom[4]
)
df = data.frame(from, to, quantity)
nodes <- data.frame(
ID = LETTERS[1:11],
label = c('Plots', 'Sampled', '', 'ES', '', 'ESD',  '',
'Similar', '', 'Benchmarks', 'Plots'),
x = c(1, rep(2:6, each = 2)),
y = c(2, rep(c(2,1), times = 5)),
label_pos = c('above', rep(c('above', 'below'), times = 5))
)
colors <- data.frame(substance = "<any>", color = "#008083")
ns <- list(type="arrow", gp=gpar(fill="#FD5901", col="white", lwd=4), mag_pos = 'label', mag_fmt="%.0f")
sankey(nodes, flows = df, node_style=ns, legend=F, colors, title = "The Number of base plots which have Quantitative Benchmarks")
rm(colors, ns, nodes, top, bottom, quantity, evenLETTERS, oddLETTERS, df, i, loss, op, to, from, base_plots)
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
library(tidyverse)
library(PantaRhei)
library(grid)
pp <- '../data/processed'
f <- list.files(pp, pattern = 'csv')
transcription <- read.csv(file.path(pp, f[grep('Transcription', f)])) %>%
distinct(ECO.SITE, .keep_all = T) %>%
select(ECO.SITE:QUANTITATIVE.BENCHMARKS, -PLOTS) %>%
mutate(across(.cols = 2:4,  ~ if_else(.x == 'DONE', 1, 0)))
tracking <- read.csv(file.path(pp, f[grep('Tracking', f)]))
benchmarks <- read.csv(file.path(pp, f[grep('Quantitative', f)]))
production <- read.csv(file.path(pp, f[grep('Production', f)]))
stateTransition <- read.csv(file.path(pp, f[grep('Ordered', f )]))
rm(pp, f)
tracking_vals <- tracking %>% filter(str_detect(PANEL, 'oversample', negate = T) &
ECO.SITE.MATCHED == TRUE) %>%
select(ECO.SITE) %>%
left_join(., transcription, by = 'ECO.SITE')
# how many ES mapped to in UFO
esUFO <- tracking_vals %>% group_by(ECO.SITE) %>% count() # 38 are mapped to
# how many of these ESDS are completed ?
# tracking_vals %>%
#  distinct(ECO.SITE, .keep_all = T) %>%
#  count(STATETRANSITION.PRODUCTION) # portions of at least 23 are complete.
# how many of the plots do these represent
bp_w_ESD <- nrow(tracking_vals) # 155 base plots have ESDS
bp_sampled <- tracking %>% filter(str_detect(PANEL, 'oversample', negate = T), str_detect(STATUS, '^SAMPLED')) %>% nrow()
# 206 of the BASE Plots are completed
plots_sampled <- tracking %>% nrow()
# 279 plots were sampled
base_plots <- tracking %>%
filter(str_detect(PANEL, 'oversample', negate = T))
benchmarks <- benchmarks %>%
distinct(ECO.SITE) %>%
mutate(QUANTITATIVE.BENCHMARKS = 1)
op <- base_plots %>%
select(-PANEL, -PLOT.ID) %>%
left_join(., transcription, by = 'ECO.SITE') %>%
select(-QUANTITATIVE.BENCHMARKS) %>%
left_join(., benchmarks, by = 'ECO.SITE')  %>%
mutate(ECO.SITE.MATCHED = replace_na(ECO.SITE.MATCHED, FALSE),
ECO.SITE.MATCHED = if_else(ECO.SITE.MATCHED == T, 1, 0),
BASE.PLOTS = 1,
STATUS = if_else(STATUS == 'SAMPLED', 1, 0)) %>%
mutate(across(STATETRANSITION.PRODUCTION:QUANTITATIVE.BENCHMARKS, ~ replace_na(.x, 0))) %>%
select(-ECO.SITE, SAMPLED = STATUS) %>%
colSums()
top <- sort(op, decreasing = T)
bottom = 255 - top
names(bottom) <- NULL
names(top) <- NULL
loss <- vector(mode = "numeric", length = length(bottom))
for(i in seq(loss)) {loss[i] <-  bottom[i + 1] - bottom[i] }
loss <- loss[1:length(loss)-1]
evenLETTERS <- LETTERS[1:26 %% 2 == 0]
oddLETTERS <- LETTERS[1:26 %% 2 != 0]
evenLETTERS <- c('A', evenLETTERS) # deal with eccentricities involving A
evenLETTERS <- evenLETTERS[1:6]
oddLETTERS <- oddLETTERS[2:6]
from = sort(c(rep(evenLETTERS[1:length(evenLETTERS)-1], each = 2),
rep(oddLETTERS[1:length(oddLETTERS)-1], each = 1)))
to = sort( c('C', rep(oddLETTERS[2:length(oddLETTERS)], each = 2),
rep(evenLETTERS[2:length(evenLETTERS)], each = 1)))
top <- top[2:length(top)]
bottom <- bottom[2:(length(bottom)-1)]
quantity <- c(
top[1], bottom[1], top[2], loss[1], bottom[1],
top[3], loss[3], bottom[2], top[4], loss[4],
bottom[3], top[5], loss[5], bottom[4]
)
df = data.frame(from, to, quantity)
nodes <- data.frame(
ID = LETTERS[1:11],
label = c('Plots', 'Sampled', '', 'ES', '', 'ESD',  '',
'Similar', '', 'Benchmarks', 'Plots'),
x = c(1, rep(2:6, each = 2)),
y = c(2, rep(c(2,1), times = 5)),
label_pos = c('above', rep(c('above', 'below'), times = 5))
)
colors <- data.frame(substance = "<any>", color = "#008083")
ns <- list(type="arrow", gp=gpar(fill="#FD5901", col="white", lwd=4), mag_pos = 'label', mag_fmt="%.0f")
sankey(nodes, flows = df, node_style=ns, legend=F, colors, title = "Number of base plots which have Quantitative Benchmarks")
rm(colors, ns, nodes, top, bottom, quantity, evenLETTERS, oddLETTERS, df, i, loss, op, to, from, base_plots)
nodes <- data.frame(
ID = LETTERS[1:11],
label = c('Plots', 'Sampled', '', 'ES', '', 'ESD',  '',
'Similar', '', 'Benchmarks Exist', 'Benchmarks lacking'),
x = c(1, rep(2:6, each = 2)),
y = c(2, rep(c(2,1), times = 5)),
label_pos = c('above', rep(c('above', 'below'), times = 5))
)
