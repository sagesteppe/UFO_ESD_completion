axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_col() +
labs(x = NULL, y = 'Number of Plots') +
theme_classic() +
theme(
panel.border = element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_col() +
labs(x = NULL, y = 'Number of Plots') +
theme_classic() +
theme(
panel.background = element_rect(..., color = NA) ,
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_col() +
labs(x = NULL, y = 'Number of Plots') +
theme_classic() +
theme(
panel.background = element_rect(color = NA) ,
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_col() +
labs(x = NULL, y = 'Number of Plots') +
theme_void() +
theme(
panel.background = element_rect(color = NA) ,
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
View(tracking)
read.csv('sampled.csv')
read.csv('ufoSampled.csv')
read.csv('ufoSampled2022.csv')
setwd('/media/sagesteppe/ExternalHD/UFO_ESD_completion/data/raw')
read.csv('ufoSampled2022.csv')
d <- read.csv('ufoSampled2022.csv')
d <- read.csv('ufoSampled2022.csv')
View(d)
d %>% filter(SAMPLED == 'SAMPLED')
d %>% filter(SAMPLED == 'SAMPLED') %>% nrow()
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_col() +
labs(x = NULL, y = 'Number of Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
knitr::opts_chunk$set(echo = F)
knitr::opts_chunk$set(dpi = 300)
knitr::opts_chunk$set(message = F)
knitr::opts_chunk$set(warning = F)
library(tidyverse)
library(PantaRhei)
library(grid)
pp <- '../data/processed'
f <- list.files(pp, pattern = 'csv')
transcription <- read.csv(file.path(pp, f[grep('Transcription', f)])) %>%
distinct(ECO.SITE, .keep_all = T) %>%
select(ECO.SITE:QUANTITATIVE.BENCHMARKS, -PLOTS) %>%
mutate(across(.cols = 2:4,  ~ if_else(.x == 'DONE', 1, 0)))
tracking <- read.csv(file.path(pp, f[grep('Tracking', f)]))
benchmarks <- read.csv(file.path(pp, f[grep('Quantitative', f)]))
production <- read.csv(file.path(pp, f[grep('Production', f)]))
stateTransition <- read.csv(file.path(pp, f[grep('Ordered', f )]))
rm(pp, f)
tracking_vals <- tracking %>% filter(str_detect(PANEL, 'oversample', negate = T) &
ECO.SITE.MATCHED == TRUE) %>%
select(ECO.SITE) %>%
left_join(., transcription, by = 'ECO.SITE')
no.ES <- tracking %>% filter(STATUS == 'SAMPLED' & ECO.SITE.MATCHED == T) %>%
distinct(ECO.SITE) %>% nrow()
bp_sampled <- tracking %>%
filter(str_detect(PANEL, 'oversample', negate = T) & STATUS == 'SAMPLED') %>%
nrow()
# how many ES mapped to in UFO
esUFO <- tracking_vals %>% group_by(ECO.SITE) %>% count()  # 38 are mapped to
# how many of these ESDS are completed ?
# tracking_vals %>%
#  distinct(ECO.SITE, .keep_all = T) %>%
#  count(STATETRANSITION.PRODUCTION) # portions of at least 23 are complete.
# how many of the plots do these represent
bp_w_ESD <- nrow(tracking_vals) # 155 base plots have ESDS
bp_sampled <- tracking %>% filter(str_detect(PANEL, 'oversample', negate = T), str_detect(STATUS, '^SAMPLED')) %>% nrow()
# 206 of the BASE Plots are completed
plots_sampled <- tracking %>% nrow()
# 279 plots were sampled
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_col() +
labs(x = NULL, y = 'Number of Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = NULL) +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = FALSE) +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n, size = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n, size = n, fill = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n, size = n, color = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n, size = n, color = n)) +
scale_color_manual('PuBuGn')
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n, size = n, color = n)) +
scale_color_manual('Set3')
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n, size = n, color = n)) +
scale_fill_manual('Set3')
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n, size = n, color = n))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n, size = n, color = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n), color = 'yellow') +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n), fill = 'yellow') +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
guides(alpha = "none")
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
guides(count = "none")
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count() +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
guides(count = "none") +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
guides(count = "none") +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
scale_y_continuous(breaks=c(0,5, 10, 15, 20))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
scale_y_continuous(breaks=c(0,5, 10, 15, 20)) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
ylim(0,20) +
scale_y_continuous(breaks=c(0, 5, 10, 15, 20)) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
ylim(0,20) +
# scale_y_continuous(breaks=c(0, 5, 10, 15, 20)) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', legend = 'Plots') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.x.bottom = element_line(color = 'red')
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.x.bottom = element_line(color = 'red'),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks=element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.line.x.bottom = element_line(color = 'red'),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y.bottom = element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_bar(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_col(show.legend = F) +
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n, fill = 'yellow')) +
geom_col(show.legend = F) + # or geom_count()
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n), fill = 'yellow')) +
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n), fill = 'yellow') +
geom_col(show.legend = F) + # or geom_count()
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n), color = 'yellow') +
geom_col(show.legend = F) + # or geom_count()
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) + # or geom_count()
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(y = fct_rev(fct_reorder(ECO.SITE, n)), x = n)) +
geom_count(show.legend = F) + # or geom_count()
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(y = fct_rev(fct_reorder(ECO.SITE, n)), x = n)) +
geom_count(show.legend = F) + # or geom_count()
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
# ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
esUFO %>%
ggplot(aes(x = fct_rev(fct_reorder(ECO.SITE, n)), y = n)) +
geom_count(show.legend = F) + # or geom_count()
labs(x = NULL, y = 'Number of Plots', title = 'Number of AIM plots per ESD') +
theme_classic() +
ylim(0,20) +
theme(
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.line.y.left = element_blank(),
axis.line.x.bottom = element_blank(),
plot.title = element_text(hjust = 0.5))
